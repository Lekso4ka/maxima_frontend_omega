import React, { useState } from 'react';
import ModalWin from "../../components/ui/ModalWin/ModalWin";
import './home.scss';
const Home = () => {
    const [modalOpen, setModalOpen] = useState(false);
    return (
        <>
            <h2 className='home'>ДОБРО ПОЖАЛОВАТЬ!</h2>
<div className='home_text'>
            <h3 className='home_text1' >Получи максимум от обучения! 
            <br/> 
            Проходи задания,
             получай награды <br/>И прокачивай своего персонажа!</h3>
             </div>
             <div className='home_text2'>
            <h3 className='home_text2' >Игра для тренировки-поможет кодить,
            <br/>
             быстро и без ошибок </h3>
             </div>
            <div className={'wrapper'}>
                <div className={'wrapper_img1'}>
                <img width={700}  src="./images/38fd94c0-8829-4dbf-9b4b-13be356c6622.png" alt="" />
                </div>
                <button 
                    className={'buttonOpen'} 
                    onClick={() => { setModalOpen(true); }}
                > читать далее </button>
                {modalOpen && <ModalWin setOpenModal={setModalOpen}> 
                    <h1>Киберспорт, Frontend, Москва — история разработчика Вадима Шабиневича </h1>
                    <img src="./images/cathello.jpg" alt="" />
                    <div className=' scroll'>
                    <p>Во время учебы я занимался киберспортом, комментировал эфиры, выигрывал чемпионат России, ездил в Китай и немного изучал базовые штуки в программировании.

А потом в какой-то момент понял, что дальше расти в киберспорте особо некуда. Тогда я решил выбрать что-то новое и вернулся к университетской специализации. Оставалось выбрать нишу и путём долгого анализа и продумывания того, что именно я хочу делать, мой выбор пал на фронтенд.

Про киберспорт.Играл я ещё с детства, а когда началась корона, попробовал себя в роли комментатора, — комментировал лигу легенд, это по сути то же самое что дота, но лига легенд популярнее за пределами снг, а дота скорее внутри. Комментировал основной турнир СНГ, это передовой самый важный турнир и некоторые международные, например, MSI и чемпионат мира.

Было весело до определенного момента, но потом как-то стало душновато и я понял, что могу делать что-то, что мне больше нравится. И так совпало, что предложение в комментировании переехать в Москву выпало на тот момент, когда я уже сам думал, нужно оно или нет.Опыт из киберспорта помог в айти, потому что я очень быстро учился именно фронтенд-разработке, быстро схватывал и потом уже когда пришел в компанию, внутри быстро начал развиваться, потому что привык решать сложные задачи.

Кроме того, из игр мне больше всего помогают навыки командной работы. В работе есть команда, с которой я каждый день взаимодействую, но иногда приходится взаимодействовать с людьми, с которыми пересекаешься впервые, поэтому киберспортивный навык выстраивания коммуникаций помогает быстро решать проблемы.

Про Frontend.Многие идут в айти потому что деньги можно заработать. Я пошел во фронтенд-разработку потому что мне это изначально нравилось. До поиска работы я сам это делал — учил верстку как хобби. Я бы наверное этим занимался и бесплатно, просто так совпало, что то, чем я занимаюсь, становится средством заработка и, мне кажется, это очень хорошо.

В универе учишь, приходишь на экзамен, сдаваёшь и дальше уже сам выбираешь, используешь ты знания или забываешь и они тебе не нужны. Там база в разных специальностях, но это всё вперемешку и всё не очень глубоко изучается.

Про учебу после учебы.Когда я пошел на курсы — это был осознанный выбор, что я хочу быть профессионалом в этой сфере и что если я хочу быть профи то как и в играх мне нужно знать все детали и подводные камни той профессии, которой я хочу заниматься.

И на курсах был большой плюс — это не только материал который тебе объясняют, но и комьюнити, с которым ты можешь взаимодействовать. Потому что все статьи есть в интернете и ты можешь их прочитать. Самым ценным было то, что ты можешь задавать вопросы наставнику и перенимать его опыт айти-сферы, перекладывать на тот опыт, который у тебя уже когда-то был. То есть ты не просто учишь что-то, какой-то фронтенд, ты можешь спрашивать у человека почему именно так он делает и какие варианты есть у этих подходов.

Я замечал и что люди, которые пришли учиться, слушают лекцию два часа в неделю и больше ничего не делают — у них ничего и не получается. То есть у них под конец курса особо то ничего и не получилось. А люди, которые задавали вопросы, которые больше чем 2 часа в неделю уделяли сфере, в которой они хотят работать в дальнейшем — у них всё получалось практически на лету — по крайней мере, так казалось тем, кто не учится.Но я понимал, что за этой лёгкой переработкой информации стоит большой труд — человек встает, два часа в день учится как минимум, что-то новое читает — обычно такие люди и задают больше всего вопросов наставнику.

И самому наставнику как человеку приятнее работать с такими людьми. Ты сразу видишь какие-то косяки в его мышлении и какие-то вещи которые он недопонял — тебе проще это объяснить. Ты не просто говоришь с пустым экраном и перевариваешь два часа какую-то информацию, но и с кем-то взаимодействуешь.

Поэтому лучшее, что дает курс — это такого человека, который работает в сфере и перед лекцией сам 8 часов пишет код. Он как никто в контексте ситуации, если правильно этого человека использовать — он сильно ускоряет темпы твоего обучения. Это основной плюс курса, потому что там у тебя был уже осознанный выбор, глаза горели и ты мог вот использовать этот запал правильно.

Есть и трудные моменты. Для меня было сложно материал удерживать в голове после нескольких новых тем, но потом оказалось, что мозг помнит, что ты учил и когда ты к теории начинаешь добавлять практику и что-то сам делать — возвращаешься к старым темам, тебе достаточно один раз прочитать и ты уже весь этот материал вспомнишь, тебе не нужно будет уже над темой сидеть два часа. Мозг — гибкая штука, он быстро адаптируется к такому количеству информации.

Если мы говорим про айти, то мозг человека работает так, что при объяснении какой-то прикладной темы он пытается ассоциативно получаемую информацию воспроизводить на жизненный опыт. Если по природоведению рассказывают что-то про деревья — твой мозг представляет, почему именно листья зеленые и как это выглядит. Когда тебе объясняют что-то по программированию — основная сложность в том, что человек не может эти абстракции перенести на жизненный опыт.

Соответственно, у тебя не было в жизни ситуаций, когда ты шел по улице и увидел как сортируют массив или пишут матрицу. И первое время мозг не может соотнести материал, о котором тебе говорят, с опытом, который у тебя был. Но со временем у тебя этот опыт появляется и запоминать темы становится намного легче. Допустим, если твое первое направление было фронтенд и ты учил его полгода-год чтобы просто начать работать или найти работу, то в дальнейшем, когда тебе придется какой-нибудь бекенд написать, нужны будут уже не годы учебы, а месяцы усилий, чтобы писать достаточно устраивающий тебя самого бекенд.

<h3>Про работу</h3>
В своей компании я синьор-фронтенд-разработчик и делаю одни из самых сложных задач компании, которые бизнес нам даёт. Начиная от согласований как это всё будет выглядеть и заканчивая реализацией, то есть написанием кода.

Поначалу кажется, что писать код самое сложное, наа самом деле сейчас этап написания кода это самый легкий этап, самое сложное это согласовать все вещи и сделать так чтобы всех всё устраивало, чтобы устраивало бизнес и приносило какие-то деньги.

Если говорить о технической части моей работы, то как основной фреймворк я используют реакт, то есть при коммерческих задачах в компании мы используем реакт как стейт менеджер используем MobX и при этом используем typescript. Есть, конечно, старые части кода, где еще остался джава-скрипт, нот мы их переносим на тайпскрипт, чтобы код был безопаснее и читался удобно.

Когда я пришел в компанию, мне давали простые задачи, связанные с версткой и мне тогда казалось, что это тяжело — сложно было много информации в начале запомнить. Постепенно я брал задачи все сложнее и сложнее — из спринта в спринт там появлялись очень логические задачи, очень сложные задачи.

Самым ярким примером было, когда я был уже почти мидл/средний джун — получилось, что синьор, который отвечал за сложную задачу, уволился, остальные были заняты. Соответственно, его задачу пришлось реализовывать мне, а там было непаханое поле новых технологий и новых подходов и сложная бизнес-логика, но мне помог человек в моей компании. В итоге мы за две недели реализовали задачу, которую синьоры не могли сделать в течение двух месяцев и заслужили лояльность бизнеса.

После того, как я закончил Maxima, мне предложили собес. Это не выглядело так, как многие думают, что после курса тебя кидают на работу. Это было полное собеседование, где смотрят, как ты можешь работать и как ты мыслишь — от джуна больше ждут горящих глаз и правильного мышления.

Думаю, я неидеально прошел техническое собеседование, но хорошо показал способность мыслить. Уже на второй из трех месяц стажировки меня перевели со стажировки в основную команду. Через два месяца мне начали доверять важные части сайта и проекта.

Больше о работе и изучении IT — в наших соцсетях
</p>
</div>
  
                </ModalWin>}
                </div>
        </>
    );
    
};

export default Home;